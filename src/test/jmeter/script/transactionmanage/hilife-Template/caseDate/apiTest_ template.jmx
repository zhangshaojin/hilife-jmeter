<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="测试环境变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="projectName" elementType="Argument">
            <stringProp name="Argument.name">projectName</stringProp>
            <stringProp name="Argument.value">hilife-transactionmanage</stringProp>
            <stringProp name="Argument.desc">项目名称</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="environment" elementType="Argument">
            <stringProp name="Argument.name">environment</stringProp>
            <stringProp name="Argument.value">测试环境</stringProp>
            <stringProp name="Argument.desc">脚本要运行的环境</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">test.91hiwork.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试环境地址</stringProp>
          </elementProp>
          <elementProp name="version" elementType="Argument">
            <stringProp name="Argument.name">version</stringProp>
            <stringProp name="Argument.value">1.0</stringProp>
            <stringProp name="Argument.desc">版本号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customID" elementType="Argument">
            <stringProp name="Argument.name">customID</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">18518472358</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">App账号</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">App密码</stringProp>
          </elementProp>
          <elementProp name="paypassword" elementType="Argument">
            <stringProp name="Argument.name">paypassword</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">支付密码</stringProp>
          </elementProp>
          <elementProp name="back_username" elementType="Argument">
            <stringProp name="Argument.name">back_username</stringProp>
            <stringProp name="Argument.value">zxh</stringProp>
            <stringProp name="Argument.desc">后台账号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="back_password" elementType="Argument">
            <stringProp name="Argument.name">back_password</stringProp>
            <stringProp name="Argument.value">893940</stringProp>
            <stringProp name="Argument.desc">后台密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql" elementType="Argument">
            <stringProp name="Argument.name">mysql</stringProp>
            <stringProp name="Argument.value">rm-2zeh7r5s96nge1014.mysql.rds.aliyuncs.com:3306/agent</stringProp>
            <stringProp name="Argument.desc">数据库地址/端口号/及库名</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influxdbIP" elementType="Argument">
            <stringProp name="Argument.name">influxdbIP</stringProp>
            <stringProp name="Argument.value">10.1.1.152</stringProp>
            <stringProp name="Argument.desc">时序数据库IP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cookiePersonID" elementType="Argument">
            <stringProp name="Argument.name">cookiePersonID</stringProp>
            <stringProp name="Argument.value">0dcf5f8a26234f8f8373f91e650cd284</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${domain}</stringProp>
        <stringProp name="HTTPSampler.port">443</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">bearer 89700a3d-ec83-475d-92fc-ebc550fc8e1a</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Cookie</stringProp>
            <stringProp name="Header.value">imageID=105468554594306347; dajiaID=1872279369684500999_1622510257094; admin_APPLET_SESSION_ID=2158094218889285567; org.springframework.web.servlet.i18n.CookieLocaleResolver.LOCALE=zh_CN; JSESSIONID=9B9A950D54154CF4FADF02C0E507332B</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="连接mysql数据库_hilife-vshop" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">${projectName}</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://rm-2zeh7r5s96nge1014.mysql.rds.aliyuncs.com:3306/vshop?allowMultiQueries=true</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">Hilife2018</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">main</stringProp>
        <stringProp name="TestPlan.comments">数据库请求内使用时多语句时需要添加allowMultiQueries=true</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="接口测试数据初始化" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request清理数据" enabled="true">
          <stringProp name="dataSource">${projectName}</stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="query">DELETE FROM eb_shop WHERE shopName LIKE &apos;%接口测试%&apos;;
DELETE FROM eb_product WHERE title LIKE &apos;%接口测试%&apos;;
DELETE FROM eb_audit  WHERE product_title LIKE &apos;%接口测试%&apos;;
DELETE FROM eb_audit  WHERE shopName LIKE &apos;%接口测试%&apos;;
DELETE FROM eb_orderform_product WHERE title LIKE &apos;%接口测试%&apos;;
DELETE FROM eb_orderform WHERE description LIKE &apos;%接口测试%&apos;;

</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="公共接口" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">获取基础数据</stringProp>
      </SetupThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="获取基础参数" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="App基础接口" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户登陆_获取access_token(合生活App)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">token.91hework.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/oauth/token?version=${version}&amp;password=${password}&amp;grant_type=multiple&amp;customID=${customID}&amp;username=${username}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">合生活token变量设置为access_token   其他服务toke命名为 服务_token</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic ZXNuTW9iaWxlQ2xpZW50OmVzbk1vYmlsZQ==</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器-获取access_token、openID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">access_token;openID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.openID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">not fund;not fund</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="获取个人信息" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="App_获取个人信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">mtest.91hework.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//mobile/person/current?version=${version}&amp;access_token=${access_token}&amp;customID=${customID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">主要</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器-personID(用户ID)、communityID(社区ID)" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">personID;communityID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.pID;$.cID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="App_完整的个人信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">mtest.91hework.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//mobile/person/complete?version=${version}&amp;personID=${personID}&amp;communityID=${communityID}&amp;access_token=${access_token}&amp;customID=${customID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器-name(姓名)、company(社区名称)、cardID(卡片？)" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">name;company;cardID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.person.personBasic.pName;$.card.company;$.card.cardID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1;1;1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="App_获取社区信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">mtest.91hework.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//mobile/community/get?version=${version}&amp;communityID=${communityID}&amp;access_token=${access_token}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器_logo 、logoUrl、desc(描述)" enabled="true">
                  <stringProp name="TestPlan.comments">1806926078139845226</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">logo;logoUrl;desc</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.logo;$.logoUrl;$.desc</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1;1;1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
                  <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="App_获取所有项目" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">mtest.91hework.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//mobile/topicPreset/receive/list?version=${version}&amp;communityID=${communityID}&amp;access_token=${access_token}&amp;customID=${customID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="后台基础接口" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_登录_获取用户信息(admin_APPLET_SESSION_ID)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">password</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">all</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                  </elementProp>
                  <elementProp name="username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${back_username}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${back_password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/transactionoauth//oauth/token</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="13466530">&quot;access_token&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_hID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hID</stringProp>
                <stringProp name="RegexExtractor.regex">hID=(.+?);</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_JSESSIONID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">JSESSIONID</stringProp>
                <stringProp name="RegexExtractor.regex">JSESSIONID=(.+?);</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_basemanage_web_APPLET_SESSION_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">basemanage_web_APPLET_SESSION_ID</stringProp>
                <stringProp name="RegexExtractor.regex">admin_APPLET_SESSION_ID=(.+?);</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="基础用例" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="false">
          <collectionProp name="CookieManager.cookies">
            <elementProp name="JSESSIONID" elementType="Cookie" testname="JSESSIONID">
              <stringProp name="Cookie.value">${__P(JSESSIONID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="hID" elementType="Cookie" testname="hID">
              <stringProp name="Cookie.value">${__P(hID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="admin_APPLET_SESSION_ID" elementType="Cookie" testname="admin_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(admin_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/admin/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="basemanage_web_APPLET_SESSION_ID" elementType="Cookie" testname="basemanage_web_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(basemanage_web_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/basemanage/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="review_APPLET_SESSION_ID" elementType="Cookie" testname="review_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(review_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/review/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="promotion_APPLET_SESSION_ID" elementType="Cookie" testname="promotion_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(promotion_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/promotion/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="accesscontrol_APPLET_SESSION_ID" elementType="Cookie" testname="accesscontrol_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(accesscontrol_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/accesscontrol/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="vshop_APPLET_SESSION_ID" elementType="Cookie" testname="vshop_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(vshop_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/vshop/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="agent_APPLET_SESSION_ID" elementType="Cookie" testname="agent_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(agent_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/agent/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="coupon_APPLET_SESSION_ID" elementType="Cookie" testname="coupon_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(coupon_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/coupon/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
          </collectionProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value"> JSESSIONID=BB79C37A84A8B4516FE0048BA107B732; admin_APPLET_SESSION_ID=7714279032107647182; imageID=105468554594306347</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="后台管理" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="模板管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_系统权限" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/transactionmanage/backapi//sysApp/listSysApp</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_新建模板" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_新建模板_获取系统名称" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="appId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">555553412266700800</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">appId</stringProp>
                    </elementProp>
                    <elementProp name="parentId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentId</stringProp>
                    </elementProp>
                    <elementProp name="categoryLevel" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">categoryLevel</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/transactionmanage/backapi//categoryInfo/getCategoryByIdAndLevel</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_新建模板_获取系统类目" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="appId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">555553412266700800</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">appId</stringProp>
                    </elementProp>
                    <elementProp name="parentId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1444022529194607799</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentId</stringProp>
                    </elementProp>
                    <elementProp name="categoryLevel" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">categoryLevel</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/transactionmanage/backapi//categoryInfo/getCategoryByIdAndLevel</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_新建模板" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;templateName&quot;:&quot;接口测试-新增模板${__Random(1000,9999)}&quot;,&quot;systemId&quot;:&quot;555553412266700800&quot;,&quot;selectedCategory&quot;:[&quot;1444022529194607799&quot;,&quot;2689941238721626661&quot;,&quot;all&quot;,&quot;all&quot;],&quot;businessModel&quot;:1,&quot;controlType&quot;:1,&quot;hasPassageFee&quot;:2,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;twoCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;threeCategoryId&quot;:&quot;all&quot;,&quot;fourCategoryId&quot;:&quot;all&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/addTemplate</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1133688990">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;添加成功&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_查看列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="current" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">current</stringProp>
                  </elementProp>
                  <elementProp name="systemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">systemId</stringProp>
                  </elementProp>
                  <elementProp name="businessModel" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">businessModel</stringProp>
                  </elementProp>
                  <elementProp name="templateStatus" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">templateStatus</stringProp>
                  </elementProp>
                  <elementProp name="structureStatus" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">structureStatus</stringProp>
                  </elementProp>
                  <elementProp name="templateName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">templateName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectTemplateListByPage</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器-templateId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">templateId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[*].templateId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">not</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_科目设置" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_设置一级科目" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置现金流GMV科目" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">01</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">G</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置现金流资金流出" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">02</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E8%B5%84%E9%87%91</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="modelType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">0</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">modelType</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置经营口径资金流出（供应商代收代付）" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">02</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E8%B5%84%E9%87%91</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="modelType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">modelType</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置经营口径资金沉淀" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">02</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E8%B5%84%E9%87%91</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="modelType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">modelType</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置经营口径事业部收入" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">02</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E6%94%B6%E5%85%A5</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="modelType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">modelType</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置经营口径事业部成本" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">02</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E6%88%90%E6%9C%AC</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="modelType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">modelType</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置一级利润率" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">15</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%88%A9%E6%B6%A6</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_设置二级科目" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级供应商" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">11</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E4%BE%9B%E5%BA%94%E5%95%86</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级火星合伙人" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E7%81%AB%E6%98%9F</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级操盘团队" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E6%93%8D%E7%9B%98</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级运营费用" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">13</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E8%BF%90%E8%90%A5</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级推广费" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">13</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E6%8E%A8%E5%B9%BF</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级O2O平台研发" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">13</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级集团行政费用" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">13</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E9%9B%86%E5%9B%A2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级税金" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">13</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E7%A8%8E%E9%87%91</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置二级小镇运维推广人工" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">13</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%B0%8F%E9%95%87</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_设置三级科目" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级业务合伙人-蚂蚁" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E8%9A%82%E8%9A%81</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级业务合伙人-团长" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%9B%A2%E9%95%BF</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级资源合伙人-上尉" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E4%B8%8A</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级资源合伙人-少校" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%B0%91%E6%A0%A1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级资源合伙人-大校" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%A4%A7</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级资源合伙人-少将" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%B0%91%E5%B0%86</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级资源合伙人-大将" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%A4%A7%E5%B0%86</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级资源合伙人-领主" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E9%A2%86%E4%B8%BB</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级产品操盘团队 -负责人" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E8%B4%9F%E8%B4%A3</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级产品操盘团队 -产品商务专员" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%95%86%E5%8A%A1</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级产品操盘团队-产品宣传设计" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%AE%A3%E4%BC%A0</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级产品操盘团队 -产品结算员" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E7%BB%93%E7%AE%97</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置三级产品操盘团队-产品技术" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E6%8A%80%E6%9C%AF</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_设置四级科目" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级业务合伙人-开发房源" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%BC%80%E5%8F%91</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">268994123872162666</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级业务合伙人-VR看房" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E7%9C%8B%E6%88%BF</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级业务合伙人-房源维护" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E7%BB%B4%E6%8A%A4</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级业务合伙人-收取钥匙" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E6%94%B6%E5%8F%96</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级业务合伙人-客户介绍" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%AE%A2%E6%88%B7</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级业务合伙人-开单人" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%BC%80%E5%8D%95</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级产品操盘团队-事业部总经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E4%BA%8B%E4%B8%9A</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级产品操盘团队-二手房副总经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E4%BA%8C%E6%89%8B%E6%88%BF</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级产品操盘团队-区域负责人" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%8C%BA%E5%9F%9F</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级产品操盘团队-店长" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E5%BA%97%E9%95%BF</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级产品操盘团队-项目经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E9%A1%B9%E7%9B%AE</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_设置四级产品操盘团队-驻派中心总经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">12</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectType</stringProp>
                        </elementProp>
                        <elementProp name="appId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">555553412266700800</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">appId</stringProp>
                        </elementProp>
                        <elementProp name="textValue" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">%E6%80%BB%E7%BB%8F%E7%90%86</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">textValue</stringProp>
                        </elementProp>
                        <elementProp name="firstCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1444022529194607799</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">firstCategoryId</stringProp>
                        </elementProp>
                        <elementProp name="secondCategoryId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2689941238721626661</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">secondCategoryId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/selectSubjectList</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_标准设置" enabled="true"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_业务合伙人开发房源" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">163391495380025412</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_业务合伙人VR看房" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">742190537774812367</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_业务合伙人房源维护" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">5544098523967736302</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_业务合伙人收取钥匙" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">3703762913100317397</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_业务合伙人客户介绍" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2173452858388598204</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_业务合伙人开单人" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">4217265240843044607</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_业务合伙人团长" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2371338802592695493</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_资源合伙人上尉" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">7464956024320379362</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_资源合伙人-少校" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">7761543718867192012</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_资源合伙人-大校" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">8021118576942926653</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_资源合伙人-少将" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">6159670685306012836</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_资源合伙人-大将" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">4474599212167416792</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_资源合伙人-领主" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2889754185641247614</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队-事业部总经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">7726261072393159581</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队-二手房副总经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2577146608240903136</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队-区域负责人" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">6760060668425816101</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队-店长" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">5284451302539872811</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队-项目经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1011233654242951918</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队-驻派中心总经理" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">3588009952677019770</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队 -产品商务专员" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">4931035377873211314</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队-产品宣传设计" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">5805067243900060353</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队 -产品结算员" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">1440228248517952804</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_标准设置_设置清分角色_产品操盘团队 -产技术" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subjectItemId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">453552230512544399</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">subjectItemId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/getSubjectItemId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1855779452">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;请求成功&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理_模板管理_构建模板_确认完成" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_构建模板_确认完成" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${templateId}&quot;,&quot;templateAccuracy&quot;:&quot;12&quot;,&quot;roundType&quot;:1,&quot;tbModelSubjectList&quot;:[{&quot;subjectLevel&quot;:1,&quot;executeStardard&quot;:100,&quot;subjectType&quot;:&quot;01&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;7218981587419545969&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部资金流入（GMV）（勿动）&quot;,&quot;type&quot;:0,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;01&quot;,&quot;subjectCode&quot;:&quot;01&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:03:31&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:03:31&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;7218981587419545969&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部资金流入（GMV）（勿动）&quot;,&quot;type&quot;:0,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;01&quot;,&quot;subjectCode&quot;:&quot;01&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:03:31&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:03:31&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;GMV科目&quot;,&quot;disabled&quot;:true,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-01&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;基础科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-02&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;利润科目&quot;,&quot;disabled&quot;:true,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-15&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;一&quot;,&quot;sort&quot;:1,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;cashFlowFormula&quot;:&quot;&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:false,&quot;needFormulaBusiness&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;7218981587419545969&quot;,&quot;businessSubjectId&quot;:&quot;7218981587419545969&quot;},{&quot;subjectLevel&quot;:1,&quot;executeStardard&quot;:0,&quot;subjectType&quot;:&quot;02&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;7238317276984528578&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部资金流出（勿动）&quot;,&quot;type&quot;:0,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;02&quot;,&quot;subjectCode&quot;:&quot;02&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:06:45&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:06:45&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;name&quot;:&quot;————&quot;,&quot;subjectCode&quot;:&quot;&quot;},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;基础科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-02&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;二&quot;,&quot;sort&quot;:2,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;cashFlowFormula&quot;:&quot;A4871202022467194151+A1268340853852029362+A1187485561232574248+A481238032539798552+A3756750880432408373+A3798394094346128584+A8027085832266925418+A4416836696581229104+A6339618714633587874&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1268340853852029362\&quot;,\&quot;parentId\&quot;:\&quot;6973676611802188962\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;火星合伙人销售费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;1311\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:59:01\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:59:01\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;all\&quot;,\&quot;firstCategoryName\&quot;:\&quot;全部\&quot;,\&quot;secondCategoryId\&quot;:\&quot;all\&quot;,\&quot;secondCategoryName\&quot;:\&quot;全部\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;操盘团队销售费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;011\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:49:21\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:49:21\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;481238032539798552\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;运营费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;012\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 08:01:35\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 08:01:35\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3756750880432408373\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;推广费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;013\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 08:02:28\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 08:02:28\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3798394094346128584\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;O2O平台研发\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;088\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:28:49\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:28:49\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;8027085832266925418\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;集团行政费用\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;089\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:08\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:08\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4416836696581229104\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;税金（城建/教育）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;090\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:29\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;6339618714633587874\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;小镇运维推广人工\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;091\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:46\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:46\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:1},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;A4871202022467194151+A1268340853852029362+A1187485561232574248+A481238032539798552+A3756750880432408373+A3798394094346128584+A8027085832266925418+A4416836696581229104+A6339618714633587874\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;7238317276984528578&quot;},{&quot;subjectLevel&quot;:1,&quot;subjectType&quot;:&quot;02&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;name&quot;:&quot;————&quot;,&quot;subjectCode&quot;:&quot;&quot;},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;3094617990862686820&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部资金流出（供应商代收代付）（勿动））&quot;,&quot;type&quot;:0,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;02&quot;,&quot;subjectCode&quot;:&quot;05&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:25:27&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:25:27&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;基础科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-02&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;三&quot;,&quot;sort&quot;:3,&quot;error&quot;:{&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0&quot;,&quot;cashFlowFormula&quot;:&quot;&quot;,&quot;businessFormula&quot;:&quot;0*B7218981587419545969&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;0\&quot;,\&quot;value\&quot;:\&quot;0\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;0*B7218981587419545969\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;businessSubjectId&quot;:&quot;3094617990862686820&quot;},{&quot;subjectLevel&quot;:1,&quot;subjectType&quot;:&quot;02&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;name&quot;:&quot;————&quot;,&quot;subjectCode&quot;:&quot;&quot;},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;6541163472134029441&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;资金沉淀（勿动）&quot;,&quot;type&quot;:0,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;02&quot;,&quot;subjectCode&quot;:&quot;06&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:25:53&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:25:53&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;基础科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-02&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;四&quot;,&quot;sort&quot;:4,&quot;error&quot;:{&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;100&quot;,&quot;cashFlowFormula&quot;:&quot;&quot;,&quot;businessFormula&quot;:&quot;B3094617990862686820-B7218981587419545969&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;3094617990862686820\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流出（供应商代收代付）（勿动））\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;02\&quot;,\&quot;subjectCode\&quot;:\&quot;05\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:25:27\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:25:27\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;B3094617990862686820-B7218981587419545969\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;businessSubjectId&quot;:&quot;6541163472134029441&quot;},{&quot;subjectLevel&quot;:1,&quot;subjectType&quot;:&quot;02&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;name&quot;:&quot;————&quot;,&quot;subjectCode&quot;:&quot;&quot;},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;7934405204445578215&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部收入（勿动）&quot;,&quot;type&quot;:0,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;02&quot;,&quot;subjectCode&quot;:&quot;07&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:26:18&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:26:18&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;基础科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-02&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;五&quot;,&quot;sort&quot;:5,&quot;error&quot;:{&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;100&quot;,&quot;cashFlowFormula&quot;:&quot;&quot;,&quot;businessFormula&quot;:&quot;100*B7218981587419545969&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B7218981587419545969\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;businessSubjectId&quot;:&quot;7934405204445578215&quot;},{&quot;subjectLevel&quot;:1,&quot;executeStardard&quot;:&quot;94.41&quot;,&quot;subjectType&quot;:&quot;02&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;name&quot;:&quot;————&quot;,&quot;subjectCode&quot;:&quot;&quot;},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;1177180363326048308&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部成本（勿动）&quot;,&quot;type&quot;:0,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;02&quot;,&quot;subjectCode&quot;:&quot;08&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:26:46&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:26:46&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;基础科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-02&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;六&quot;,&quot;sort&quot;:6,&quot;error&quot;:{&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false},&quot;cashFlowFormula&quot;:&quot;&quot;,&quot;businessFormula&quot;:&quot;B4871202022467194151+B1268340853852029362+B1187485561232574248+B481238032539798552+B3756750880432408373+B3798394094346128584+B8027085832266925418+B4416836696581229104+B6339618714633587874&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1268340853852029362\&quot;,\&quot;parentId\&quot;:\&quot;6973676611802188962\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;火星合伙人销售费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;1311\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:59:01\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:59:01\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;all\&quot;,\&quot;firstCategoryName\&quot;:\&quot;全部\&quot;,\&quot;secondCategoryId\&quot;:\&quot;all\&quot;,\&quot;secondCategoryName\&quot;:\&quot;全部\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;操盘团队销售费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;011\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:49:21\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:49:21\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;481238032539798552\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;运营费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;012\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 08:01:35\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 08:01:35\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3756750880432408373\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;推广费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;013\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 08:02:28\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 08:02:28\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3798394094346128584\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;O2O平台研发\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;088\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:28:49\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:28:49\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;8027085832266925418\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;集团行政费用\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;089\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:08\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:08\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4416836696581229104\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;税金（城建/教育）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;090\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:29\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;6339618714633587874\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;小镇运维推广人工\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;091\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:46\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:46\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;B4871202022467194151+B1268340853852029362+B1187485561232574248+B481238032539798552+B3756750880432408373+B3798394094346128584+B8027085832266925418+B4416836696581229104+B6339618714633587874\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;businessSubjectId&quot;:&quot;1177180363326048308&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;11&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;4871202022467194151&quot;,&quot;parentId&quot;:&quot;6260420696464704835&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;供应商（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;11&quot;,&quot;subjectCode&quot;:&quot;01212&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-24 02:30:17&quot;,&quot;updateTime&quot;:&quot;2021-05-24 02:30:17&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;4871202022467194151&quot;,&quot;parentId&quot;:&quot;6260420696464704835&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;供应商（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;11&quot;,&quot;subjectCode&quot;:&quot;01212&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-24 02:30:17&quot;,&quot;updateTime&quot;:&quot;2021-05-24 02:30:17&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.1&quot;,&quot;sort&quot;:7,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;80&quot;,&quot;cashFlowFormula&quot;:&quot;100*B4871202022467194151&quot;,&quot;businessFormula&quot;:&quot;80*B7218981587419545969&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B4871202022467194151\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;80\&quot;,\&quot;value\&quot;:\&quot;80\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:2,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;80*B7218981587419545969\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;4871202022467194151&quot;,&quot;businessSubjectId&quot;:&quot;4871202022467194151&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;1268340853852029362&quot;,&quot;parentId&quot;:&quot;6973676611802188962&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;火星合伙人销售费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;1311&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-24 02:59:01&quot;,&quot;updateTime&quot;:&quot;2021-05-24 02:59:01&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;all&quot;,&quot;firstCategoryName&quot;:&quot;全部&quot;,&quot;secondCategoryId&quot;:&quot;all&quot;,&quot;secondCategoryName&quot;:&quot;全部&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;1268340853852029362&quot;,&quot;parentId&quot;:&quot;6973676611802188962&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;火星合伙人销售费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;1311&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-24 02:59:01&quot;,&quot;updateTime&quot;:&quot;2021-05-24 02:59:01&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;all&quot;,&quot;firstCategoryName&quot;:&quot;全部&quot;,&quot;secondCategoryId&quot;:&quot;all&quot;,&quot;secondCategoryName&quot;:&quot;全部&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2&quot;,&quot;sort&quot;:8,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;8&quot;,&quot;cashFlowFormula&quot;:&quot;A5007183218506484779+A2371338802592695493+A7464956024320379362+A7761543718867192012+A8021118576942926653+A6159670685306012836+A4474599212167416792+A2889754185641247614&quot;,&quot;businessFormula&quot;:&quot;B5007183218506484779+B2371338802592695493+B7464956024320379362+B7761543718867192012+B8021118576942926653+B6159670685306012836+B4474599212167416792+B2889754185641247614&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;5007183218506484779\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-蚂蚁\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01001\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:53:23\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:32\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2371338802592695493\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-团长\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01002\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:54:22\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:39\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;7464956024320379362\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-上尉\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01003\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:56:21\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;7761543718867192012\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-少校\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01004\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:55:45\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:26\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;8021118576942926653\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-大校\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01005\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:29\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:57:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;6159670685306012836\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-少将\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01006\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:41\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4474599212167416792\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-大将\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01007\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:35\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2889754185641247614\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-领主\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01008\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:58:09\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:37\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:1},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;A5007183218506484779+A2371338802592695493+A7464956024320379362+A7761543718867192012+A8021118576942926653+A6159670685306012836+A4474599212167416792+A2889754185641247614\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;5007183218506484779\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-蚂蚁\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01001\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:53:23\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:32\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2371338802592695493\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-团长\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01002\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:54:22\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:39\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;7464956024320379362\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-上尉\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01003\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:56:21\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;7761543718867192012\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-少校\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01004\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:55:45\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:26\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;8021118576942926653\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-大校\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01005\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:29\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:57:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;6159670685306012836\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-少将\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01006\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:41\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4474599212167416792\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-大将\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01007\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:35\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2889754185641247614\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-领主\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01008\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:58:09\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:37\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;B5007183218506484779+B2371338802592695493+B7464956024320379362+B7761543718867192012+B8021118576942926653+B6159670685306012836+B4474599212167416792+B2889754185641247614\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;controlUp&quot;:1,&quot;cashFlowSubjectId&quot;:&quot;1268340853852029362&quot;,&quot;businessSubjectId&quot;:&quot;1268340853852029362&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;5007183218506484779&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-蚂蚁&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01001&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:53:23&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:32&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;5007183218506484779&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-蚂蚁&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01001&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:53:23&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:32&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.1&quot;,&quot;sort&quot;:9,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;8&quot;,&quot;cashFlowFormula&quot;:&quot;A163391495380025412+A742190537774812367+A5544098523967736302+A3703762913100317397+A2173452858388598204+A4217265240843044607&quot;,&quot;businessFormula&quot;:&quot;B163391495380025412+B742190537774812367+B5544098523967736302+B3703762913100317397+B2173452858388598204+B4217265240843044607&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;163391495380025412\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-开发房源\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;098\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:32:52\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:32:52\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;742190537774812367\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-VR看房\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;099\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:10\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:10\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;5544098523967736302\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-房源维护\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;100\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:24\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:24\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3703762913100317397\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-收取钥匙\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;101\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:40\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:40\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2173452858388598204\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-客户介绍\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;102\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:57\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4217265240843044607\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-开单人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;103\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:34:09\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:34:09\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:1},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;A163391495380025412+A742190537774812367+A5544098523967736302+A3703762913100317397+A2173452858388598204+A4217265240843044607\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;163391495380025412\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-开发房源\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;098\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:32:52\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:32:52\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;742190537774812367\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-VR看房\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;099\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:10\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:10\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;5544098523967736302\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-房源维护\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;100\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:24\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:24\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3703762913100317397\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-收取钥匙\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;101\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:40\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:40\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2173452858388598204\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-客户介绍\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;102\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:57\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4217265240843044607\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-开单人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;103\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:34:09\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:34:09\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;B163391495380025412+B742190537774812367+B5544098523967736302+B3703762913100317397+B2173452858388598204+B4217265240843044607\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;5007183218506484779&quot;,&quot;businessSubjectId&quot;:&quot;5007183218506484779&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;163391495380025412&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-开发房源&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;098&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:32:52&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:32:52&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;163391495380025412&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-开发房源&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;098&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:32:52&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:32:52&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.1.1&quot;,&quot;sort&quot;:10,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:&quot;8&quot;,&quot;cashFlowFormula&quot;:&quot;100*B163391495380025412&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;163391495380025412\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-开发房源\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;098\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:32:52\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:32:52\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B163391495380025412\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;开发房源&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;6398956429186714359&quot;,&quot;addSubject&quot;:1,&quot;cashFlowSubjectId&quot;:&quot;163391495380025412&quot;,&quot;businessSubjectId&quot;:&quot;163391495380025412&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;742190537774812367&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-VR看房&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;099&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:10&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:10&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;742190537774812367&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-VR看房&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;099&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:10&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:10&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.1.2&quot;,&quot;sort&quot;:11,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B742190537774812367&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;742190537774812367\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-VR看房\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;099\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:10\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:10\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B742190537774812367\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;VR看房&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;8929864458334652959&quot;,&quot;cashFlowSubjectId&quot;:&quot;742190537774812367&quot;,&quot;businessSubjectId&quot;:&quot;742190537774812367&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;5544098523967736302&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-房源维护&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;100&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:24&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:24&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;5544098523967736302&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-房源维护&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;100&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:24&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:24&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.1.3&quot;,&quot;sort&quot;:12,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B5544098523967736302&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;5544098523967736302\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-房源维护\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;100\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:24\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:24\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B5544098523967736302\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;业务合伙人-房源维护&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;6188031228980511903&quot;,&quot;cashFlowSubjectId&quot;:&quot;5544098523967736302&quot;,&quot;businessSubjectId&quot;:&quot;5544098523967736302&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;3703762913100317397&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-收取钥匙&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;101&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:40&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:40&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;3703762913100317397&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-收取钥匙&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;101&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:40&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:40&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.1.4&quot;,&quot;sort&quot;:13,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B3703762913100317397&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;3703762913100317397\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-收取钥匙\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;101\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:40\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:40\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B3703762913100317397\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;业务合伙人-收取钥匙&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;8786262178966687434&quot;,&quot;cashFlowSubjectId&quot;:&quot;3703762913100317397&quot;,&quot;businessSubjectId&quot;:&quot;3703762913100317397&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;2173452858388598204&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-客户介绍&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;102&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:57&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:57&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;2173452858388598204&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-客户介绍&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;102&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:33:57&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:33:57&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.1.5&quot;,&quot;sort&quot;:14,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B2173452858388598204&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;2173452858388598204\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-客户介绍\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;102\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:33:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:33:57\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B2173452858388598204\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;客户介绍&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;3331736493374522425&quot;,&quot;cashFlowSubjectId&quot;:&quot;2173452858388598204&quot;,&quot;businessSubjectId&quot;:&quot;2173452858388598204&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;4217265240843044607&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-开单人&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;103&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:34:09&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:34:09&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;4217265240843044607&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-开单人&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;103&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:34:09&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:34:09&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.1.6&quot;,&quot;sort&quot;:15,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B4217265240843044607&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;4217265240843044607\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-开单人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;103\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:34:09\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:34:09\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B4217265240843044607\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;开单人&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;3536440318623894093&quot;,&quot;cashFlowSubjectId&quot;:&quot;4217265240843044607&quot;,&quot;businessSubjectId&quot;:&quot;4217265240843044607&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;2371338802592695493&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-团长&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01002&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:54:22&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:39&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;2371338802592695493&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;业务合伙人-团长&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01002&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:54:22&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:39&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.2&quot;,&quot;sort&quot;:16,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B2371338802592695493&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;2371338802592695493\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;业务合伙人-团长\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01002\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:54:22\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:39\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B2371338802592695493\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;业务合伙人-团长&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;842732833091307852&quot;,&quot;cashFlowSubjectId&quot;:&quot;2371338802592695493&quot;,&quot;businessSubjectId&quot;:&quot;2371338802592695493&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;7464956024320379362&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-上尉&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01003&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:56:21&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:29&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;7464956024320379362&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-上尉&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01003&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:56:21&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:29&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.3&quot;,&quot;sort&quot;:17,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B7464956024320379362&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7464956024320379362\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-上尉\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01003\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:56:21\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B7464956024320379362\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;资源合伙人-上尉&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;7141914875274874660&quot;,&quot;cashFlowSubjectId&quot;:&quot;7464956024320379362&quot;,&quot;businessSubjectId&quot;:&quot;7464956024320379362&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;7761543718867192012&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-少校&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01004&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:55:45&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:26&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;7761543718867192012&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-少校&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01004&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:55:45&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:26&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.4&quot;,&quot;sort&quot;:18,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B7761543718867192012&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7761543718867192012\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-少校\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01004\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:55:45\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:26\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B7761543718867192012\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;资源合伙人-少校&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;1965860867676457209&quot;,&quot;cashFlowSubjectId&quot;:&quot;7761543718867192012&quot;,&quot;businessSubjectId&quot;:&quot;7761543718867192012&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;8021118576942926653&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-大校&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01005&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:57:29&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:57:29&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;8021118576942926653&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-大校&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01005&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:57:29&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:57:29&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.5&quot;,&quot;sort&quot;:19,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B8021118576942926653&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;8021118576942926653\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-大校\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01005\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:29\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:57:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B8021118576942926653\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;资源合伙人-大校&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;4886053555806946317&quot;,&quot;cashFlowSubjectId&quot;:&quot;8021118576942926653&quot;,&quot;businessSubjectId&quot;:&quot;8021118576942926653&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;6159670685306012836&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-少将&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01006&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:57:41&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:31&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;6159670685306012836&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-少将&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01006&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:57:41&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:31&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.6&quot;,&quot;sort&quot;:20,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B6159670685306012836&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;6159670685306012836\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-少将\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01006\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:41\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B6159670685306012836\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;资源合伙人-少将&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;4993522879976589359&quot;,&quot;cashFlowSubjectId&quot;:&quot;6159670685306012836&quot;,&quot;businessSubjectId&quot;:&quot;6159670685306012836&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;4474599212167416792&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-大将&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01007&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:57:57&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:35&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;4474599212167416792&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-大将&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01007&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:57:57&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:35&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.7&quot;,&quot;sort&quot;:21,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B4474599212167416792&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;4474599212167416792\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-大将\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01007\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:57:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:35\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B4474599212167416792\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;资源合伙人-大将&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;5561615181554338853&quot;,&quot;cashFlowSubjectId&quot;:&quot;4474599212167416792&quot;,&quot;businessSubjectId&quot;:&quot;4474599212167416792&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;2889754185641247614&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-领主&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01008&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:58:09&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:37&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;2889754185641247614&quot;,&quot;parentId&quot;:&quot;5618079103507972737&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;资源合伙人-领主&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01008&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:58:09&quot;,&quot;updateTime&quot;:&quot;2021-05-24 17:52:37&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.2.8&quot;,&quot;sort&quot;:22,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B2889754185641247614&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;2889754185641247614\&quot;,\&quot;parentId\&quot;:\&quot;5618079103507972737\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;资源合伙人-领主\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01008\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:58:09\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 17:52:37\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B2889754185641247614\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;资源合伙人-领主&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;2339497713006103280&quot;,&quot;cashFlowSubjectId&quot;:&quot;2889754185641247614&quot;,&quot;businessSubjectId&quot;:&quot;2889754185641247614&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;操盘团队销售费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;011&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:49:21&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:49:21&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;操盘团队销售费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;011&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:49:21&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:49:21&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3&quot;,&quot;sort&quot;:23,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0.7&quot;,&quot;cashFlowFormula&quot;:&quot;A5973062526041279220+A4931035377873211314+A5805067243900060353+A1440228248517952804+A453552230512544399&quot;,&quot;businessFormula&quot;:&quot;B5973062526041279220+B4931035377873211314+B5805067243900060353+B1440228248517952804+B453552230512544399&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;5973062526041279220\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -负责人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01101\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:58:48\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:58:48\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4931035377873211314\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产品商务专员\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01102\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:07\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:07\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;5805067243900060353\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-产品宣传设计\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01103\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:20\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:20\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1440228248517952804\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产品结算员\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01104\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:33\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:33\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;453552230512544399\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产技术\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01105\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:46\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:46\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:1},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;A5973062526041279220+A4931035377873211314+A5805067243900060353+A1440228248517952804+A453552230512544399\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;5973062526041279220\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -负责人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01101\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:58:48\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:58:48\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;4931035377873211314\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产品商务专员\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01102\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:07\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:07\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;5805067243900060353\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-产品宣传设计\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01103\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:20\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:20\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1440228248517952804\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产品结算员\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01104\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:33\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:33\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;453552230512544399\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产技术\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01105\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:46\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:46\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;B5973062526041279220+B4931035377873211314+B5805067243900060353+B1440228248517952804+B453552230512544399\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;controlUp&quot;:1,&quot;cashFlowSubjectId&quot;:&quot;1187485561232574248&quot;,&quot;businessSubjectId&quot;:&quot;1187485561232574248&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;5973062526041279220&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -负责人&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01101&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:58:48&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:58:48&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;5973062526041279220&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -负责人&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01101&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:58:48&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:58:48&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.1&quot;,&quot;sort&quot;:24,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0.7&quot;,&quot;cashFlowFormula&quot;:&quot;A7726261072393159581+A2577146608240903136+A6760060668425816101+A5284451302539872811+A1011233654242951918+A3588009952677019770&quot;,&quot;businessFormula&quot;:&quot;B7726261072393159581+B2577146608240903136+B6760060668425816101+B5284451302539872811+B1011233654242951918+B3588009952677019770&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7726261072393159581\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-事业部总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;105\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:34:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:34:57\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2577146608240903136\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-二手房副总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;106\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:16\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:16\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;6760060668425816101\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-区域负责人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;107\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:25\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:25\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;5284451302539872811\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-店长\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;108\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:34\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:34\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1011233654242951918\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-项目经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;110\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:36:24\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:36:24\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3588009952677019770\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-驻派中心总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;111\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:36:36\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:36:36\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:1},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;A7726261072393159581+A2577146608240903136+A6760060668425816101+A5284451302539872811+A1011233654242951918+A3588009952677019770\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:1,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7726261072393159581\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-事业部总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;105\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:34:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:34:57\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;2577146608240903136\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-二手房副总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;106\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:16\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:16\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;6760060668425816101\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-区域负责人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;107\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:25\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:25\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;5284451302539872811\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-店长\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;108\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:34\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:34\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;1011233654242951918\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-项目经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;110\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:36:24\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:36:24\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]},{\&quot;id\&quot;:\&quot;3588009952677019770\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-驻派中心总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;111\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:36:36\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:36:36\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:1,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{},\&quot;formulaType\&quot;:1,\&quot;formula\&quot;:\&quot;B7726261072393159581+B2577146608240903136+B6760060668425816101+B5284451302539872811+B1011233654242951918+B3588009952677019770\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;controlUp&quot;:2,&quot;cashFlowSubjectId&quot;:&quot;5973062526041279220&quot;,&quot;businessSubjectId&quot;:&quot;5973062526041279220&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;7726261072393159581&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-事业部总经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;105&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:34:57&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:34:57&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;7726261072393159581&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-事业部总经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;105&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:34:57&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:34:57&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.1.1&quot;,&quot;sort&quot;:25,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:&quot;0.7&quot;,&quot;cashFlowFormula&quot;:&quot;100*B7726261072393159581&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7726261072393159581\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-事业部总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;105\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:34:57\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:34:57\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B7726261072393159581\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;事业部总经理&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;6874701363814090590&quot;,&quot;addSubject&quot;:1,&quot;cashFlowSubjectId&quot;:&quot;7726261072393159581&quot;,&quot;businessSubjectId&quot;:&quot;7726261072393159581&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;2577146608240903136&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-二手房副总经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;106&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:35:16&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:35:16&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;2577146608240903136&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-二手房副总经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;106&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:35:16&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:35:16&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.1.2&quot;,&quot;sort&quot;:26,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B2577146608240903136&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;2577146608240903136\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-二手房副总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;106\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:16\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:16\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B2577146608240903136\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;二手房副总经理&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;5181158079834375433&quot;,&quot;cashFlowSubjectId&quot;:&quot;2577146608240903136&quot;,&quot;businessSubjectId&quot;:&quot;2577146608240903136&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;6760060668425816101&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-区域负责人&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;107&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:35:25&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:35:25&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;6760060668425816101&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-区域负责人&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;107&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:35:25&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:35:25&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.1.3&quot;,&quot;sort&quot;:27,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B6760060668425816101&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;6760060668425816101\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-区域负责人\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;107\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:25\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:25\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B6760060668425816101\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;区域负责人&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;243272089207850894&quot;,&quot;cashFlowSubjectId&quot;:&quot;6760060668425816101&quot;,&quot;businessSubjectId&quot;:&quot;6760060668425816101&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;5284451302539872811&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-店长&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;108&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:35:34&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:35:34&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;5284451302539872811&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-店长&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;108&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:35:34&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:35:34&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.1.4&quot;,&quot;sort&quot;:28,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B5284451302539872811&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;5284451302539872811\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-店长\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;108\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:35:34\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:35:34\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B5284451302539872811\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;店长&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;7438536495453981642&quot;,&quot;cashFlowSubjectId&quot;:&quot;5284451302539872811&quot;,&quot;businessSubjectId&quot;:&quot;5284451302539872811&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;1011233654242951918&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-项目经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;110&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:36:24&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:36:24&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;1011233654242951918&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-项目经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;110&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:36:24&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:36:24&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.1.5&quot;,&quot;sort&quot;:29,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B1011233654242951918&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;1011233654242951918\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-项目经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;110\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:36:24\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:36:24\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B1011233654242951918\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;项目经理&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;8147205333621031066&quot;,&quot;cashFlowSubjectId&quot;:&quot;1011233654242951918&quot;,&quot;businessSubjectId&quot;:&quot;1011233654242951918&quot;},{&quot;subjectLevel&quot;:4,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;3588009952677019770&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-驻派中心总经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;111&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:36:36&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:36:36&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;3588009952677019770&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-驻派中心总经理&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;111&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-27 15:36:36&quot;,&quot;updateTime&quot;:&quot;2021-05-27 15:36:36&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.1.6&quot;,&quot;sort&quot;:30,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B3588009952677019770&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;3588009952677019770\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-驻派中心总经理\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;111\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-27 15:36:36\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-27 15:36:36\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:4,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B3588009952677019770\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;派驻中心总经理&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;6551299796134676129&quot;,&quot;cashFlowSubjectId&quot;:&quot;3588009952677019770&quot;,&quot;businessSubjectId&quot;:&quot;3588009952677019770&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;4931035377873211314&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -产品商务专员&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01102&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:07&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:07&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;4931035377873211314&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -产品商务专员&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01102&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:07&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:07&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.2&quot;,&quot;sort&quot;:31,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B4931035377873211314&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;4931035377873211314\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产品商务专员\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01102\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:07\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:07\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B4931035377873211314\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;产品操盘团队 -产品商务专员&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;3092557757343482535&quot;,&quot;cashFlowSubjectId&quot;:&quot;4931035377873211314&quot;,&quot;businessSubjectId&quot;:&quot;4931035377873211314&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;5805067243900060353&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-产品宣传设计&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01103&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:20&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:20&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;5805067243900060353&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队-产品宣传设计&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01103&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:20&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:20&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.3&quot;,&quot;sort&quot;:32,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B5805067243900060353&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;5805067243900060353\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队-产品宣传设计\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01103\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:20\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:20\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B5805067243900060353\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;产品操盘团队-产品宣传设计&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;6913917159194445077&quot;,&quot;cashFlowSubjectId&quot;:&quot;5805067243900060353&quot;,&quot;businessSubjectId&quot;:&quot;5805067243900060353&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;1440228248517952804&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -产品结算员&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01104&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:33&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:33&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;1440228248517952804&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -产品结算员&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01104&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:33&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:33&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.4&quot;,&quot;sort&quot;:33,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B1440228248517952804&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;1440228248517952804\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产品结算员\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01104\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:33\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:33\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B1440228248517952804\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;产品操盘团队 -产品结算员&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;6564558764881104084&quot;,&quot;cashFlowSubjectId&quot;:&quot;1440228248517952804&quot;,&quot;businessSubjectId&quot;:&quot;1440228248517952804&quot;},{&quot;subjectLevel&quot;:3,&quot;subjectType&quot;:&quot;12&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;453552230512544399&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -产技术&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01105&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:46&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:46&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;453552230512544399&quot;,&quot;parentId&quot;:&quot;1187485561232574248&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:2,&quot;name&quot;:&quot;产品操盘团队 -产技术&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;12&quot;,&quot;subjectCode&quot;:&quot;01105&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 07:59:46&quot;,&quot;updateTime&quot;:&quot;2021-05-21 07:59:46&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.3.5&quot;,&quot;sort&quot;:34,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;clearRole&quot;:false,&quot;executeStardard&quot;:false},&quot;executeStardard&quot;:0,&quot;cashFlowFormula&quot;:&quot;100*B453552230512544399&quot;,&quot;businessFormula&quot;:&quot;&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;453552230512544399\&quot;,\&quot;parentId\&quot;:\&quot;1187485561232574248\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;产品操盘团队 -产技术\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;12\&quot;,\&quot;subjectCode\&quot;:\&quot;01105\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:59:46\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:59:46\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:3,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B453552230512544399\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;产品操盘团队-产品技术&quot;,&quot;businessFormulaJson&quot;:&quot;[]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:false,&quot;needClearRole&quot;:true,&quot;clearRoleId&quot;:&quot;7398035451120535248&quot;,&quot;cashFlowSubjectId&quot;:&quot;453552230512544399&quot;,&quot;businessSubjectId&quot;:&quot;453552230512544399&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;481238032539798552&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;运营费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;012&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 08:01:35&quot;,&quot;updateTime&quot;:&quot;2021-05-21 08:01:35&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;481238032539798552&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;运营费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;012&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 08:01:35&quot;,&quot;updateTime&quot;:&quot;2021-05-21 08:01:35&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.4&quot;,&quot;sort&quot;:35,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0.1&quot;,&quot;cashFlowFormula&quot;:&quot;100*B481238032539798552&quot;,&quot;businessFormula&quot;:&quot;(0.5)*(B4871202022467194151-B7218981587419545969)&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;481238032539798552\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;运营费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;012\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 08:01:35\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 08:01:35\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B481238032539798552\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;B4871202022467194151-B7218981587419545969\&quot;},{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;name\&quot;:\&quot;步骤1计算结果\&quot;,\&quot;value\&quot;:0,\&quot;formulaType\&quot;:4}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;0.5\&quot;,\&quot;value\&quot;:\&quot;0.5\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:2,\&quot;formulaType\&quot;:4,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:4,\&quot;formula\&quot;:\&quot;(0.5)*(B4871202022467194151-B7218981587419545969)\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;481238032539798552&quot;,&quot;businessSubjectId&quot;:&quot;481238032539798552&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;3756750880432408373&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;推广费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;013&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 08:02:28&quot;,&quot;updateTime&quot;:&quot;2021-05-21 08:02:28&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;3756750880432408373&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;推广费用（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;013&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 08:02:28&quot;,&quot;updateTime&quot;:&quot;2021-05-21 08:02:28&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.5&quot;,&quot;sort&quot;:36,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0.1&quot;,&quot;cashFlowFormula&quot;:&quot;100*B3756750880432408373&quot;,&quot;businessFormula&quot;:&quot;(0.5)*(B4871202022467194151-B7218981587419545969)&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;3756750880432408373\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;推广费用（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;013\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 08:02:28\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 08:02:28\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B3756750880432408373\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;B4871202022467194151-B7218981587419545969\&quot;},{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;name\&quot;:\&quot;步骤1计算结果\&quot;,\&quot;value\&quot;:0,\&quot;formulaType\&quot;:4}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;0.5\&quot;,\&quot;value\&quot;:\&quot;0.5\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:2,\&quot;formulaType\&quot;:4,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:4,\&quot;formula\&quot;:\&quot;(0.5)*(B4871202022467194151-B7218981587419545969)\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;3756750880432408373&quot;,&quot;businessSubjectId&quot;:&quot;3756750880432408373&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;3798394094346128584&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;O2O平台研发&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;088&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:28:49&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:28:49&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;3798394094346128584&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;O2O平台研发&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;088&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:28:49&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:28:49&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.6&quot;,&quot;sort&quot;:37,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0.6&quot;,&quot;cashFlowFormula&quot;:&quot;100*B3798394094346128584&quot;,&quot;businessFormula&quot;:&quot;(3)*(B4871202022467194151-B7218981587419545969)&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;3798394094346128584\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;O2O平台研发\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;088\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:28:49\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:28:49\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B3798394094346128584\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;B4871202022467194151-B7218981587419545969\&quot;},{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;name\&quot;:\&quot;步骤1计算结果\&quot;,\&quot;value\&quot;:0,\&quot;formulaType\&quot;:4}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;3\&quot;,\&quot;value\&quot;:\&quot;3\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:2,\&quot;formulaType\&quot;:4,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:4,\&quot;formula\&quot;:\&quot;(3)*(B4871202022467194151-B7218981587419545969)\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;3798394094346128584&quot;,&quot;businessSubjectId&quot;:&quot;3798394094346128584&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;8027085832266925418&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;集团行政费用&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;089&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:29:08&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:29:08&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;8027085832266925418&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;集团行政费用&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;089&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:29:08&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:29:08&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.7&quot;,&quot;sort&quot;:38,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0.6&quot;,&quot;cashFlowFormula&quot;:&quot;100*B8027085832266925418&quot;,&quot;businessFormula&quot;:&quot;(3)*(B4871202022467194151-B7218981587419545969)&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;8027085832266925418\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;集团行政费用\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;089\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:08\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:08\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B8027085832266925418\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;B4871202022467194151-B7218981587419545969\&quot;},{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;name\&quot;:\&quot;步骤1计算结果\&quot;,\&quot;value\&quot;:0,\&quot;formulaType\&quot;:4}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;3\&quot;,\&quot;value\&quot;:\&quot;3\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:2,\&quot;formulaType\&quot;:4,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:4,\&quot;formula\&quot;:\&quot;(3)*(B4871202022467194151-B7218981587419545969)\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;8027085832266925418&quot;,&quot;businessSubjectId&quot;:&quot;8027085832266925418&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;4416836696581229104&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;税金（城建/教育）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;090&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:29:29&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:29:29&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;4416836696581229104&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;税金（城建/教育）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;090&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:29:29&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:29:29&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.8&quot;,&quot;sort&quot;:39,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;3.71&quot;,&quot;cashFlowFormula&quot;:&quot;100*B4416836696581229104&quot;,&quot;businessFormula&quot;:&quot;3.71*B7218981587419545969&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;4416836696581229104\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;税金（城建/教育）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;090\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:29\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:29\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B4416836696581229104\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;3.71\&quot;,\&quot;value\&quot;:\&quot;3.71\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;3.71*B7218981587419545969\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;cashFlowSubjectId&quot;:&quot;4416836696581229104&quot;,&quot;businessSubjectId&quot;:&quot;4416836696581229104&quot;},{&quot;subjectLevel&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;6339618714633587874&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;小镇运维推广人工&quot;,&quot;type&quot;:1,&quot;modelType&quot;:1,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;091&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:29:46&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:29:46&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;6339618714633587874&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;小镇运维推广人工&quot;,&quot;type&quot;:1,&quot;modelType&quot;:2,&quot;subjectType&quot;:&quot;13&quot;,&quot;subjectCode&quot;:&quot;091&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-25 09:29:46&quot;,&quot;updateTime&quot;:&quot;2021-05-25 09:29:46&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;6.9&quot;,&quot;sort&quot;:40,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;executeStardard&quot;:&quot;0.6&quot;,&quot;cashFlowFormula&quot;:&quot;100*B6339618714633587874&quot;,&quot;businessFormula&quot;:&quot;(3)*(B4871202022467194151-B7218981587419545969)&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;6339618714633587874\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;小镇运维推广人工\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;13\&quot;,\&quot;subjectCode\&quot;:\&quot;091\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-25 09:29:46\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-25 09:29:46\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;100\&quot;,\&quot;value\&quot;:\&quot;100\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:3,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:3,\&quot;formula\&quot;:\&quot;100*B6339618714633587874\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;4871202022467194151\&quot;,\&quot;parentId\&quot;:\&quot;6260420696464704835\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:2,\&quot;name\&quot;:\&quot;供应商（勿动）\&quot;,\&quot;type\&quot;:1,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;11\&quot;,\&quot;subjectCode\&quot;:\&quot;01212\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-24 02:30:17\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:2,\&quot;modelType\&quot;:2},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;B4871202022467194151-B7218981587419545969\&quot;},{\&quot;type\&quot;:3,\&quot;col1List\&quot;:[{\&quot;name\&quot;:\&quot;步骤1计算结果\&quot;,\&quot;value\&quot;:0,\&quot;formulaType\&quot;:4}],\&quot;col2List\&quot;:[{\&quot;name\&quot;:\&quot;3\&quot;,\&quot;value\&quot;:\&quot;3\&quot;,\&quot;modelType\&quot;:3,\&quot;formulaType\&quot;:3}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:2,\&quot;formulaType\&quot;:4,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:3,\&quot;formulaType\&quot;:3,\&quot;modelType\&quot;:1,\&quot;subjectLevel\&quot;:1},\&quot;formulaType\&quot;:4,\&quot;formula\&quot;:\&quot;(3)*(B4871202022467194151-B7218981587419545969)\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;controlDown&quot;:2,&quot;cashFlowSubjectId&quot;:&quot;6339618714633587874&quot;,&quot;businessSubjectId&quot;:&quot;6339618714633587874&quot;},{&quot;subjectLevel&quot;:1,&quot;executeStardard&quot;:&quot;5.59&quot;,&quot;subjectType&quot;:&quot;15&quot;,&quot;cashFlowSubjectItem&quot;:{&quot;id&quot;:&quot;7726762476107221405&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部利润（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:0,&quot;subjectType&quot;:&quot;15&quot;,&quot;subjectCode&quot;:&quot;014&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 08:03:45&quot;,&quot;updateTime&quot;:&quot;2021-05-21 08:03:45&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;businessSubjectItem&quot;:{&quot;id&quot;:&quot;7726762476107221405&quot;,&quot;appId&quot;:&quot;555553412266700800&quot;,&quot;levelCode&quot;:1,&quot;name&quot;:&quot;新零售事业部利润（勿动）&quot;,&quot;type&quot;:1,&quot;modelType&quot;:0,&quot;subjectType&quot;:&quot;15&quot;,&quot;subjectCode&quot;:&quot;014&quot;,&quot;createPersonId&quot;:&quot;555555943579496448&quot;,&quot;opratorId&quot;:&quot;555555943579496448&quot;,&quot;createTime&quot;:&quot;2021-05-21 08:03:45&quot;,&quot;updateTime&quot;:&quot;2021-05-21 08:03:45&quot;,&quot;appName&quot;:&quot;供应链测试专用（勿动）&quot;,&quot;firstCategoryId&quot;:&quot;1444022529194607799&quot;,&quot;firstCategoryName&quot;:&quot;食品&quot;,&quot;secondCategoryId&quot;:&quot;2689941238721626661&quot;,&quot;secondCategoryName&quot;:&quot;休闲食品&quot;,&quot;parentName&quot;:&quot;&quot;,&quot;childrenSubjectItems&quot;:[]},&quot;subjectTypeList&quot;:[{&quot;label&quot;:&quot;GMV科目&quot;,&quot;disabled&quot;:true,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-01&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;基础科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-02&quot;,&quot;lib&quot;:&quot;base&quot;},{&quot;label&quot;:&quot;供应商科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-11&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;佣金科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-12&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;平台科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-13&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;通道费科目&quot;,&quot;disabled&quot;:false,&quot;required&quot;:false,&quot;value&quot;:&quot;stype-14&quot;,&quot;lib&quot;:&quot;profit&quot;},{&quot;label&quot;:&quot;利润科目&quot;,&quot;disabled&quot;:true,&quot;required&quot;:true,&quot;value&quot;:&quot;stype-15&quot;,&quot;lib&quot;:&quot;profit&quot;}],&quot;serialNumber&quot;:&quot;七&quot;,&quot;sort&quot;:41,&quot;error&quot;:{&quot;formulaCashflow&quot;:false,&quot;formulaBusiness&quot;:false,&quot;executeStardard&quot;:false,&quot;clearRole&quot;:false},&quot;cashFlowFormula&quot;:&quot;A7238317276984528578-A7218981587419545969&quot;,&quot;businessFormula&quot;:&quot;B1177180363326048308-B7934405204445578215&quot;,&quot;cashFlowFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7218981587419545969\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流入（GMV）（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;01\&quot;,\&quot;subjectCode\&quot;:\&quot;01\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:03:31\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;7238317276984528578\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部资金流出（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:1,\&quot;subjectType\&quot;:\&quot;02\&quot;,\&quot;subjectCode\&quot;:\&quot;02\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:06:45\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:06:45\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:1},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:1},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;A7238317276984528578-A7218981587419545969\&quot;}]&quot;,&quot;clearRoleName&quot;:&quot;&quot;,&quot;businessFormulaJson&quot;:&quot;[{\&quot;type\&quot;:2,\&quot;col1List\&quot;:[{\&quot;id\&quot;:\&quot;7934405204445578215\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部收入（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;02\&quot;,\&quot;subjectCode\&quot;:\&quot;07\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:26:18\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:26:18\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;col2List\&quot;:[{\&quot;id\&quot;:\&quot;1177180363326048308\&quot;,\&quot;appId\&quot;:\&quot;555553412266700800\&quot;,\&quot;levelCode\&quot;:1,\&quot;name\&quot;:\&quot;新零售事业部成本（勿动）\&quot;,\&quot;type\&quot;:0,\&quot;modelType\&quot;:2,\&quot;subjectType\&quot;:\&quot;02\&quot;,\&quot;subjectCode\&quot;:\&quot;08\&quot;,\&quot;createPersonId\&quot;:\&quot;555555943579496448\&quot;,\&quot;opratorId\&quot;:\&quot;555555943579496448\&quot;,\&quot;createTime\&quot;:\&quot;2021-05-21 07:26:46\&quot;,\&quot;updateTime\&quot;:\&quot;2021-05-21 07:26:46\&quot;,\&quot;appName\&quot;:\&quot;供应链测试专用（勿动）\&quot;,\&quot;firstCategoryId\&quot;:\&quot;1444022529194607799\&quot;,\&quot;firstCategoryName\&quot;:\&quot;食品\&quot;,\&quot;secondCategoryId\&quot;:\&quot;2689941238721626661\&quot;,\&quot;secondCategoryName\&quot;:\&quot;休闲食品\&quot;,\&quot;parentName\&quot;:\&quot;\&quot;,\&quot;childrenSubjectItems\&quot;:[]}],\&quot;left\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;right\&quot;:{\&quot;optionMethod\&quot;:1,\&quot;formulaType\&quot;:2,\&quot;subjectLevel\&quot;:1,\&quot;modelType\&quot;:2},\&quot;formulaType\&quot;:2,\&quot;formula\&quot;:\&quot;B1177180363326048308-B7934405204445578215\&quot;}]&quot;,&quot;needFormulaCash&quot;:true,&quot;needFormulaBusiness&quot;:true,&quot;needClearRole&quot;:false,&quot;controlDown&quot;:1,&quot;cashFlowSubjectId&quot;:&quot;7726762476107221405&quot;,&quot;businessSubjectId&quot;:&quot;7726762476107221405&quot;}],&quot;systemId&quot;:&quot;555553412266700800&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/buildTemplate</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1727050193">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;构建成功&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_启用模板" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${templateId}&quot;,&quot;templateStatus&quot;:1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/updateTemplateStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="469604999">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_停用模板" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;4262683049703523753&quot;,&quot;templateStatus&quot;:2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/updateTemplateStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="469604999">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_模板管理_删除模板" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="templateId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5231537230656458015</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">templateId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/transactionmanage/backapi//template/deleteTemplate</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1387431619">&quot;code&quot;:&quot;200&quot;,&quot;result&quot;:&quot;删除成功&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据驱动" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies">
            <elementProp name="JSESSIONID" elementType="Cookie" testname="JSESSIONID">
              <stringProp name="Cookie.value">${__P(JSESSIONID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="hID" elementType="Cookie" testname="hID">
              <stringProp name="Cookie.value">${__P(hID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="admin_APPLET_SESSION_ID" elementType="Cookie" testname="admin_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(admin_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/admin/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="basemanage_web_APPLET_SESSION_ID" elementType="Cookie" testname="basemanage_web_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(basemanage_web_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/basemanage/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="review_APPLET_SESSION_ID" elementType="Cookie" testname="review_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(review_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/review/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="promotion_APPLET_SESSION_ID" elementType="Cookie" testname="promotion_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(promotion_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/promotion/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="accesscontrol_APPLET_SESSION_ID" elementType="Cookie" testname="accesscontrol_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(accesscontrol_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/accesscontrol/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="vshop_APPLET_SESSION_ID" elementType="Cookie" testname="vshop_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(vshop_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/vshop/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="agent_APPLET_SESSION_ID" elementType="Cookie" testname="agent_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(agent_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/agent/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="coupon_APPLET_SESSION_ID" elementType="Cookie" testname="coupon_APPLET_SESSION_ID">
              <stringProp name="Cookie.value">${__P(coupon_APPLET_SESSION_ID)}</stringProp>
              <stringProp name="Cookie.domain">${domain}</stringProp>
              <stringProp name="Cookie.path">/coupon/</stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
          </collectionProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">49</stringProp>
          <stringProp name="TestPlan.comments">循环次数的用例数</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">./caseDate//${projectName}.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">CaseNo,ModuleName,ApiNanme,Domain,RequestType,Path,Param,Assertion</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="get请求" enabled="true">
            <stringProp name="IfController.condition">&quot;${RequestType}&quot;==&quot;get&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${CaseNo}_${ModuleName}_${ApiNanme}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${Path}?${Param}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1839609358">${Assertion}</stringProp>
                  <stringProp name="-671696245">&quot;code&quot;:&quot;200&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">48</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="post请求" enabled="true">
            <stringProp name="IfController.condition">&quot;${RequestType}&quot;==&quot;post&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${CaseNo}_${ModuleName}_${ApiNanme}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${Param}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${Path}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1839609358">${Assertion}</stringProp>
                  <stringProp name="-671696245">&quot;code&quot;:&quot;200&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">34</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="701486441">基础用例</stringProp>
            <stringProp name="662703527">后台管理</stringProp>
            <stringProp name="915696549">电商服务</stringProp>
            <stringProp name="1213215359">高级设置</stringProp>
            <stringProp name="-327366714">审批人员设置</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="script">prev.setDataEncoding(&quot;utf-8&quot;);</stringProp>
      </BeanShellPostProcessor>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">商品确认、门店确认</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="后端监听器-influxdb" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://${influxdbIP}:8086/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">${projectName}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value">${environment}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
