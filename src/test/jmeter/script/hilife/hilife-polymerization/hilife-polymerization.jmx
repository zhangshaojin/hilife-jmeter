<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.20200625">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="测试环境变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="projectName" elementType="Argument">
            <stringProp name="Argument.name">projectName</stringProp>
            <stringProp name="Argument.value">hilife-householdve2</stringProp>
            <stringProp name="Argument.desc">项目名称</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="environment" elementType="Argument">
            <stringProp name="Argument.name">environment</stringProp>
            <stringProp name="Argument.value">测试环境</stringProp>
            <stringProp name="Argument.desc">脚本要运行的环境</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">test.91hiwork.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试环境地址</stringProp>
          </elementProp>
          <elementProp name="version" elementType="Argument">
            <stringProp name="Argument.name">version</stringProp>
            <stringProp name="Argument.value">6.2.5</stringProp>
            <stringProp name="Argument.desc">版本号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customID" elementType="Argument">
            <stringProp name="Argument.name">customID</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">17611197535</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">App账号</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">1234560</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">App密码</stringProp>
          </elementProp>
          <elementProp name="paypassword" elementType="Argument">
            <stringProp name="Argument.name">paypassword</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">支付密码</stringProp>
          </elementProp>
          <elementProp name="back_username" elementType="Argument">
            <stringProp name="Argument.name">back_username</stringProp>
            <stringProp name="Argument.value">17611197535</stringProp>
            <stringProp name="Argument.desc">后台账号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="back_password" elementType="Argument">
            <stringProp name="Argument.name">back_password</stringProp>
            <stringProp name="Argument.value">sA0wTAGWO0tAfiKgw%2BLjxQ%3D%3D</stringProp>
            <stringProp name="Argument.desc">后台密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientID" elementType="Argument">
            <stringProp name="Argument.name">clientID</stringProp>
            <stringProp name="Argument.value">id_3155583436507529782</stringProp>
            <stringProp name="Argument.desc">有分客户端ID(固定)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_secret" elementType="Argument">
            <stringProp name="Argument.name">client_secret</stringProp>
            <stringProp name="Argument.value">781216684</stringProp>
            <stringProp name="Argument.desc">有分客户端(固定)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influxdbIP" elementType="Argument">
            <stringProp name="Argument.name">influxdbIP</stringProp>
            <stringProp name="Argument.value">10.1.1.152</stringProp>
            <stringProp name="Argument.desc">influxdb时序数据库IP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql" elementType="Argument">
            <stringProp name="Argument.name">mysql</stringProp>
            <stringProp name="Argument.value">rm-2zeh7r5s96nge1014.mysql.rds.aliyuncs.com:3306/agent</stringProp>
            <stringProp name="Argument.desc">数据库地址/端口号/及库名</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientID2" elementType="Argument">
            <stringProp name="Argument.name">clientID2</stringProp>
            <stringProp name="Argument.value">id_8686453165593477535</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">买金网客户端ID(固定)</stringProp>
          </elementProp>
          <elementProp name="client_secret2" elementType="Argument">
            <stringProp name="Argument.name">client_secret2</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${domain}</stringProp>
        <stringProp name="HTTPSampler.port">443</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
        <collectionProp name="CookieManager.cookies">
          <elementProp name="JSESSIONID" elementType="Cookie" testname="JSESSIONID">
            <stringProp name="Cookie.value">${__P(JSESSIONID)}</stringProp>
            <stringProp name="Cookie.domain">${domain}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="hID" elementType="Cookie" testname="hID">
            <stringProp name="Cookie.value">${__P(Hid)}</stringProp>
            <stringProp name="Cookie.domain">${domain}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
        </collectionProp>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="公共接口" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">获取基础数据</stringProp>
      </SetupThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="获取基础参数" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="App基础接口" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户登陆_获取access_token(合生活App)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">token.91hework.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/oauth/token?version=${version}&amp;password=${password}&amp;grant_type=multiple&amp;customID=${customID}&amp;username=${username}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">合生活token变量设置为access_token   其他服务toke命名为 服务_token</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic ZXNuTW9iaWxlQ2xpZW50OmVzbk1vYmlsZQ==</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器-获取access_token、openID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">access_token;openID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.openID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">not fund;not fund</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="获取个人信息" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="App-获取个人信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">mtest.91hework.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//mobile/person/current?version=${version}&amp;access_token=${access_token}&amp;customID=${customID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">主要</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器-personID(用户ID)、communityID(社区ID)" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">personID;communityID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.pID;$.cID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="App-完整的个人信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">mtest.91hework.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//mobile/person/complete?version=${version}&amp;personID=${personID}&amp;communityID=${communityID}&amp;access_token=${access_token}&amp;customID=${customID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器-name(姓名)、company(社区名称)、cardID(卡片？)" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">name;company;cardID</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.person.personBasic.pName;$.card.company;$.card.cardID</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1;1;1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="App-获取社区信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">mtest.91hework.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//mobile/community/get?version=${version}&amp;communityID=${communityID}&amp;access_token=${access_token}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器_logo 、logoUrl、desc(描述)" enabled="true">
                  <stringProp name="TestPlan.comments">1806926078139845226</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">logo;logoUrl;desc</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.logo;$.logoUrl;$.desc</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1;1;1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
                  <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="后台基础接口" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理_登陆_获取用户信息" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/admin/lg/toLogIn?password=${back_password}&amp;username=${username}&amp;verifyCode=0198&amp;isFlag=true </stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="257022250">&quot;result&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器_companyID(社区ID)、companyInfoID(企业ID)、personID(用户ID)、personName(用户名称)、back_hid()" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">companyID;companyInfoID;personID;personName;Hid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.companyID;$.data.companyInfoID;$.data.personID;$.data.personName;$.data.hid</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1;1;1;1;1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;0;0;0;0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_JSESSIONID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">JSESSIONID</stringProp>
                <stringProp name="RegexExtractor.regex">JSESSIONID=(.+?);</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_admin_APPLET_SESSION_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">admin_APPLET_SESSION_ID</stringProp>
                <stringProp name="RegexExtractor.regex">admin_APPLET_SESSION_ID=(.+?);</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取参数设置为全局变量" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${access_token};${openID};${personID};${communityID};${name};${company};${cardID};${Hid};${JSESSIONID};${admin_APPLET_SESSION_ID};${companyID}</stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">${__setProperty(access_token,${access_token},)};       //合生活token 
${__setProperty(openID,${openID},)};                   //合生活openID      
${__setProperty(personID,${personID},)};               //合生活用户ID
${__setProperty(communityID,${communityID},)};         //社区ID
${__setProperty(name,${name},)};                       //用户名称
${__setProperty(company,${company},)};                 //社区名称
${__setProperty(cardID,${cardID},)};                   //
${__setProperty(Hid,${Hid},)};               //后台hid
${__setProperty(JSESSIONID,${JSESSIONID},)};           //后台JSESSIONID
${__setProperty(admin_APPLET_SESSION_ID,${admin_APPLET_SESSION_ID},)};         //后台admin_APPLET_SESSION_ID
${__setProperty(companyID,${companyID},)};             //社区ID</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（验证码）" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">yanzhengma</stringProp>
                <stringProp name="RegexExtractor.regex">验证码(.+?)，您正在登录，若非本人操</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="基础接口" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="前置页面" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_预约优惠券" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/AdvanceCouponList</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="376494326">https://cdns1.91hilife.com/hilife-decoration-web/bookingBackstage/css/bookingBackstage.711d7c722bfb8813fde454f306ddf4df.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_装修分期预约" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/goToDecorationLoan?hID=7825558898091574568&amp;menuID=8541611960538777402</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1554912175">https://cdns1.91hilife.com/hilife-decoration-web/instalment/css/instalment.b28b0b26b906e7eee9a383f65e2c2c19.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_装修订单管理" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/goToOrderManagePage?hID=7825558898091574568&amp;menuID=6819499256268014164</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1840785570">https://cdns1.91hilife.com/hilife-decoration-web/orderManagement/css/orderManagement.ded73afc332de0b89345394d16b424e2.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_装修签约管理" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/goToSigningManagePage?hID=7825558898091574568&amp;menuID=8747631203879110201</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2018914220">https://cdns1.91hilife.com/hilife-decoration-web/decorationSignManage/css/decorationSignManage.4296572c0d1781720c506c4ca024e3f0.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页数据统计" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页数据列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/queryPageRecord</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页导出各项项目数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportCompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-导出所有订单数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportOrder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-831814475">&quot;result&quot;:&quot;exception&quot;,&quot;code&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-创建活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取活动区域" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动聚合页" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页列表" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/queryPagePolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId;polymerizationName" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">polymerizationId;polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId;$.data.dataList[*].polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取活动基础信息" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取店铺信息" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllShopInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllCategoryInfo</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取企业下一级分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getFirstCategoryModel</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询聚合页所有正在参加砍价的活动名称成功" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityNameByCompanyInfoId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询所有优惠券" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getCouponList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询活动聚合页详细信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                        <elementProp name="type" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">type</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动页面详情" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品成功" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;categoryId&quot;:&quot;&quot;,&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;],&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;shopId&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/searchProductInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606702978496_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-保存活动聚合页设置" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-获取活动商品" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;polymerizationId&quot;:&quot;1259931738876562473&quot;,&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;activityId&quot;:&quot;&quot;,&quot;type&quot;:0}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProduct</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606716681577_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器----fileID" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">fileID</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.fileID</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--默认" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:1,&quot;contentModel&quot;:2},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;3&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">商品--一行两个，显示标题显示购物车；店铺---一行三个，显示标题，默认标题名称</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-获取本地token" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/getUploadToken</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--商品模块1" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:2,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;1&quot;},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;3&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">商品模块- 一行一个商品，不显示标题不显示购物车</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--商品模块3" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;5751186729626780464&quot;,&quot;titleStyle&quot;:2,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:3},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;3&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">商品模块- 一行三个商品，显示自定义样式标题，不显示购物车</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--店铺模块1" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:1,&quot;contentModel&quot;:2},{&#xd;
&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1648881532622619145&quot;,&quot;contentViewStyle&quot;:2,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:2,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:2},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">店铺---一行两个，不显示标题，店铺样式自定义</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--店铺模块2" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:1,&quot;contentModel&quot;:2},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;4&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">店铺---一行四个</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-编辑活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页-提交活动聚合页内容" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑${__Random(101,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页-编辑1&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-复制活动聚合页链接" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-复制 活动聚合页链接" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-查询聚合页详情信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById?polymerizationId=1020892738500053492&amp;type=1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP_活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-商品模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-跳转活动聚合页页面" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2366313325835599948</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">//polymerization/index/toPolymerization</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-90265532">https://cdns1.91hilife.com/hilife-polymerization-web/activityAppPage/css/activityAppPage.cc96e42e45aa0a56a88ddae13123470a.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-活动聚合页购物车数量" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询聚合页详情信息成功" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2366313325835599948&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询活动聚合页模块" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="productId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1011457990196809371</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">productId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getSkuInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-vshop-加入购物车" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">6.1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">version</stringProp>
                  </elementProp>
                  <elementProp name="buyNumber" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">buyNumber</stringProp>
                  </elementProp>
                  <elementProp name="productID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1000780007967966734</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">productID</stringProp>
                  </elementProp>
                  <elementProp name="productTemplateID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">185321523414255506</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">productTemplateID</stringProp>
                  </elementProp>
                  <elementProp name="shopID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">449867674986762146</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shopID</stringProp>
                  </elementProp>
                  <elementProp name="templateId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">494126140873</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">templateId</stringProp>
                  </elementProp>
                  <elementProp name="skuID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">9217922266661865098</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">skuID</stringProp>
                  </elementProp>
                  <elementProp name="access_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">access_token</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/vshop/shoppingcart/insertTtemToShoppingCart.json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="187813179">&quot;isCreate&quot;:false,&quot;message&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询活动聚合页商品状态" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getProductScaleStatus?productID=1011457990196809371&amp;polymerizationModuleSubId=3733801262232194831&amp;moduleContentSubId=7436213346266268585</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-店铺模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询店铺状态" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="shopID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1002851736276584810</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shopID</stringProp>
                  </elementProp>
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3346026720872320536</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">7077738512846045297</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getShopStatus</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-砍价模块（促销内容）" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询活动聚合页商品状态" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="activityProductId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2511853416736378124</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityProductId</stringProp>
                  </elementProp>
                  <elementProp name="activityId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">7423602238371545376</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityId</stringProp>
                  </elementProp>
                  <elementProp name="polymerizationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2366313325835599948</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationId</stringProp>
                  </elementProp>
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5828005573230938555</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">6700202811565753856</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProductStatus</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-优惠券模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-活动聚合页领取优惠券" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4610463566605471509</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5158556813852295737</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                  <elementProp name="contentType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">contentType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/judgeCategoryIsExist</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-商品分类模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查看分类是否存在" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4666288147115624340</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">116447501237242230</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                  <elementProp name="contentType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">contentType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/judgeCategoryIsExist</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="场景用例1_创建活动聚合页_查看活动聚合页" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="前置页面" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_预约优惠券" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/AdvanceCouponList</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="376494326">https://cdns1.91hilife.com/hilife-decoration-web/bookingBackstage/css/bookingBackstage.711d7c722bfb8813fde454f306ddf4df.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_装修分期预约" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/goToDecorationLoan?hID=7825558898091574568&amp;menuID=8541611960538777402</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1554912175">https://cdns1.91hilife.com/hilife-decoration-web/instalment/css/instalment.b28b0b26b906e7eee9a383f65e2c2c19.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_装修订单管理" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/goToOrderManagePage?hID=7825558898091574568&amp;menuID=6819499256268014164</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1840785570">https://cdns1.91hilife.com/hilife-decoration-web/orderManagement/css/orderManagement.ded73afc332de0b89345394d16b424e2.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台_装修签约管理" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/decoration/index/goToSigningManagePage?hID=7825558898091574568&amp;menuID=8747631203879110201</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2018914220">https://cdns1.91hilife.com/hilife-decoration-web/decorationSignManage/css/decorationSignManage.4296572c0d1781720c506c4ca024e3f0.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页数据统计" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页数据列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/queryPageRecord</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页导出各项项目数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportCompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-导出所有订单数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportOrder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-831814475">&quot;result&quot;:&quot;exception&quot;,&quot;code&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-创建活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取活动区域" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动聚合页" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页列表" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/queryPagePolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId;polymerizationName" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">polymerizationId;polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId;$.data.dataList[*].polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取活动基础信息" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取店铺信息" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllShopInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllCategoryInfo</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取企业下一级分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getFirstCategoryModel</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询聚合页所有正在参加砍价的活动名称成功" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityNameByCompanyInfoId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询所有优惠券" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getCouponList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询活动聚合页详细信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                        <elementProp name="type" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">type</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动页面详情" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品成功" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;categoryId&quot;:&quot;&quot;,&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;],&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;shopId&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/searchProductInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606702978496_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-保存活动聚合页设置" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-获取活动商品" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;polymerizationId&quot;:&quot;1259931738876562473&quot;,&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;activityId&quot;:&quot;&quot;,&quot;type&quot;:0}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProduct</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606716681577_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器----fileID" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">fileID</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.fileID</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容" enabled="false">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#3E4150&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;1715855871409737041&quot;,&quot;pageBackgroundColor&quot;:&quot;#f5f5f5&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;${polymerizationName}&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#333333&quot;,&quot;linkUrl&quot;:null,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1061225236108823321&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1935132937675098438&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;7280460502483488638&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;模块名称&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:1,&quot;contentModel&quot;:2},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;8556329372824586171&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品接口&quot;},{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1703646945389724122&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品接口&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;模块名称&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:4},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;3742258097399614705&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;230350255387656979&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;砍价接口&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠接口&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;8244683080701002282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类接口&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;模块名称&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:2,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;www.baidu.com&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;2501344310713402479&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容2" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:1,&quot;contentModel&quot;:2},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;3&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-获取本地token" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/getUploadToken</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-编辑活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页-提交活动聚合页内容" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑${__Random(101,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页-编辑1&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-复制活动聚合页链接" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-复制 活动聚合页链接" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-查询聚合页详情信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById?polymerizationId=1020892738500053492&amp;type=1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP_活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-商品模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-跳转活动聚合页页面" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2366313325835599948</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">//polymerization/index/toPolymerization</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-90265532">https://cdns1.91hilife.com/hilife-polymerization-web/activityAppPage/css/activityAppPage.cc96e42e45aa0a56a88ddae13123470a.css</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-活动聚合页购物车数量" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询聚合页详情信息成功" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2366313325835599948&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询活动聚合页模块" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="productId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1011457990196809371</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">productId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getSkuInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-vshop-加入购物车" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">6.1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">version</stringProp>
                  </elementProp>
                  <elementProp name="buyNumber" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">buyNumber</stringProp>
                  </elementProp>
                  <elementProp name="productID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1000780007967966734</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">productID</stringProp>
                  </elementProp>
                  <elementProp name="productTemplateID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">185321523414255506</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">productTemplateID</stringProp>
                  </elementProp>
                  <elementProp name="shopID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">449867674986762146</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shopID</stringProp>
                  </elementProp>
                  <elementProp name="templateId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">494126140873</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">templateId</stringProp>
                  </elementProp>
                  <elementProp name="skuID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">9217922266661865098</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">skuID</stringProp>
                  </elementProp>
                  <elementProp name="access_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">access_token</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/vshop/shoppingcart/insertTtemToShoppingCart.json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="187813179">&quot;isCreate&quot;:false,&quot;message&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询活动聚合页商品状态" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getProductScaleStatus?productID=1011457990196809371&amp;polymerizationModuleSubId=3733801262232194831&amp;moduleContentSubId=7436213346266268585</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-店铺模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询店铺状态" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="shopID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1002851736276584810</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shopID</stringProp>
                  </elementProp>
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3346026720872320536</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">7077738512846045297</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getShopStatus</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-砍价模块（促销内容）" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查询活动聚合页商品状态" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="activityProductId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2511853416736378124</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityProductId</stringProp>
                  </elementProp>
                  <elementProp name="activityId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">7423602238371545376</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityId</stringProp>
                  </elementProp>
                  <elementProp name="polymerizationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2366313325835599948</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationId</stringProp>
                  </elementProp>
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5828005573230938555</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">6700202811565753856</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProductStatus</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-优惠券模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-活动聚合页领取优惠券" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4610463566605471509</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5158556813852295737</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                  <elementProp name="contentType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">contentType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/judgeCategoryIsExist</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="APP-活动聚合页-商品分类模块" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP-活动聚合页-查看分类是否存在" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="polymerizationModuleSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4666288147115624340</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">polymerizationModuleSubId</stringProp>
                  </elementProp>
                  <elementProp name="moduleContentSubId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">116447501237242230</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">moduleContentSubId</stringProp>
                  </elementProp>
                  <elementProp name="contentType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">contentType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/judgeCategoryIsExist</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="966500251">&quot;result&quot;:null,&quot;code&quot;:&quot;0&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="场景用例2_创建活动聚合页-商品1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页数据统计" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页数据列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/queryPageRecord</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页导出各项项目数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportCompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-导出所有订单数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportOrder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-831814475">&quot;result&quot;:&quot;exception&quot;,&quot;code&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-创建活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取活动区域" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动聚合页" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页列表" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/queryPagePolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId;polymerizationName" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">polymerizationId;polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId;$.data.dataList[*].polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取活动基础信息" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取店铺信息" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllShopInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllCategoryInfo</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取企业下一级分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getFirstCategoryModel</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询聚合页所有正在参加砍价的活动名称成功" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityNameByCompanyInfoId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询所有优惠券" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getCouponList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询活动聚合页详细信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                        <elementProp name="type" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">type</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动页面详情" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品成功" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;categoryId&quot;:&quot;&quot;,&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;],&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;shopId&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/searchProductInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606702978496_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-保存活动聚合页设置" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-获取活动商品" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;polymerizationId&quot;:&quot;1259931738876562473&quot;,&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;activityId&quot;:&quot;&quot;,&quot;type&quot;:0}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProduct</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606716681577_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器----fileID" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">fileID</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.fileID</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--商品模块1" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:2,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;1&quot;},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;3&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">商品模块- 一行一个商品，不显示标题不显示购物车</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-获取本地token" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/getUploadToken</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-编辑活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页-提交活动聚合页内容" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑${__Random(101,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页-编辑1&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-复制活动聚合页链接" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-复制 活动聚合页链接" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-查询聚合页详情信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById?polymerizationId=1020892738500053492&amp;type=1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="场景用例3_创建活动聚合页-商品2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页数据统计" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页数据列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/queryPageRecord</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页导出各项项目数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportCompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-导出所有订单数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportOrder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-831814475">&quot;result&quot;:&quot;exception&quot;,&quot;code&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-创建活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取活动区域" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动聚合页" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页列表" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/queryPagePolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId;polymerizationName" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">polymerizationId;polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId;$.data.dataList[*].polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取活动基础信息" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取店铺信息" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllShopInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllCategoryInfo</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取企业下一级分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getFirstCategoryModel</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询聚合页所有正在参加砍价的活动名称成功" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityNameByCompanyInfoId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询所有优惠券" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getCouponList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询活动聚合页详细信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                        <elementProp name="type" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">type</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动页面详情" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品成功" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;categoryId&quot;:&quot;&quot;,&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;],&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;shopId&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/searchProductInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606702978496_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-保存活动聚合页设置" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-获取活动商品" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;polymerizationId&quot;:&quot;1259931738876562473&quot;,&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;activityId&quot;:&quot;&quot;,&quot;type&quot;:0}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProduct</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606716681577_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器----fileID" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">fileID</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.fileID</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--商品模块3" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;5751186729626780464&quot;,&quot;titleStyle&quot;:2,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:3},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;3&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">商品模块- 一行三个商品，显示自定义样式标题，不显示购物车</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-获取本地token" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/getUploadToken</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-编辑活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页-提交活动聚合页内容" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑${__Random(101,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页-编辑1&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-复制活动聚合页链接" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-复制 活动聚合页链接" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-查询聚合页详情信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById?polymerizationId=1020892738500053492&amp;type=1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="场景用例4_创建活动聚合页-店铺1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页数据统计" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页数据列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/queryPageRecord</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页导出各项项目数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportCompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-导出所有订单数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportOrder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-831814475">&quot;result&quot;:&quot;exception&quot;,&quot;code&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-创建活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取活动区域" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动聚合页" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页列表" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/queryPagePolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId;polymerizationName" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">polymerizationId;polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId;$.data.dataList[*].polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取活动基础信息" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取店铺信息" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllShopInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllCategoryInfo</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取企业下一级分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getFirstCategoryModel</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询聚合页所有正在参加砍价的活动名称成功" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityNameByCompanyInfoId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询所有优惠券" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getCouponList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询活动聚合页详细信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                        <elementProp name="type" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">type</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动页面详情" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品成功" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;categoryId&quot;:&quot;&quot;,&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;],&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;shopId&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/searchProductInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606702978496_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-保存活动聚合页设置" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-获取活动商品" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;polymerizationId&quot;:&quot;1259931738876562473&quot;,&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;activityId&quot;:&quot;&quot;,&quot;type&quot;:0}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProduct</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606716681577_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器----fileID" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">fileID</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.fileID</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--店铺模块1" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:1,&quot;contentModel&quot;:2},&#xd;
{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1648881532622619145&quot;,&quot;contentViewStyle&quot;:2,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:2,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:2},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">店铺---一行两个，不显示标题，店铺样式自定义</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-获取本地token" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/getUploadToken</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-编辑活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页-提交活动聚合页内容" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑${__Random(101,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页-编辑1&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-复制活动聚合页链接" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-复制 活动聚合页链接" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-查询聚合页详情信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById?polymerizationId=1020892738500053492&amp;type=1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="场景用例5_创建活动聚合页-店铺2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页数据统计" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页数据列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/queryPageRecord</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页导出各项项目数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportCompany</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-导出所有订单数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;beginCreTime&quot;:null,&quot;endCreTime&quot;:null,&quot;recordCycle&quot;:&quot;&quot;,&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/polymerization/statistic/exportOrder</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-831814475">&quot;result&quot;:&quot;exception&quot;,&quot;code&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-活动聚合页" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-创建活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取活动区域" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动聚合页" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页${__Random(1,1000)}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-活动聚合页列表" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;currentPageNumber&quot;:1,&quot;pageMaxSize&quot;:10}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/polymerization/polymerization/queryPagePolymerization</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器--polymerizationId;polymerizationName" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">polymerizationId;polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.dataList[*].polymerizationId;$.data.dataList[*].polymerizationName</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">0;0</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取活动基础信息" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取店铺信息" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllShopInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getAllCategoryInfo</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-获取企业下一级分类" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getFirstCategoryModel</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询聚合页所有正在参加砍价的活动名称成功" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityNameByCompanyInfoId</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询所有优惠券" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getCouponList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询活动聚合页详细信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="polymerizationId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${polymerizationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">polymerizationId</stringProp>
                        </elementProp>
                        <elementProp name="type" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">2</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">type</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置活动页面详情" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-查询商品成功" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;categoryId&quot;:&quot;&quot;,&quot;companyIds&quot;:[&quot;269931278217394676674594&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676635625&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676660591&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676634608&quot;],&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;shopId&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/searchProductInfo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-创建活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606702978496_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-保存活动聚合页设置" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-获取活动商品" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;polymerizationId&quot;:&quot;1259931738876562473&quot;,&quot;currentPage&quot;:1,&quot;pageMaxSize&quot;:10,&quot;productName&quot;:&quot;&quot;,&quot;activityId&quot;:&quot;&quot;,&quot;type&quot;:0}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getActivityProduct</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-上传图片" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;cdnConfigID&quot;:&quot;user_public&quot;,&quot;cdnDomainHTTP&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;cdnDomainHTTPS&quot;:&quot;https://cdns4.91hilife.com/&quot;,&quot;fileName&quot;:&quot;微信图片_20200416101330.jpg&quot;,&quot;fileSize&quot;:24741,&quot;path&quot;:&quot;polymerization/1606716681577_微信图片_20200416101330.jpg&quot;,&quot;etag&quot;:&quot;Fr_IPMLimMFMye2gTInTInVa0T2-&quot;,&quot;sourceID&quot;:&quot;&quot;,&quot;sourceType&quot;:1,&quot;fileFrom&quot;:&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/uploadUserFileByCDN</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器----fileID" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">fileID</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.fileID</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-保存活动聚合内容--店铺模块2" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;activityPolymerizationPO&quot;:{&quot;buttonColor&quot;:&quot;#7748DD&quot;,&quot;buttonWordColor&quot;:&quot;#ffffff&quot;,&quot;focusPictureId&quot;:&quot;2480856048776203345&quot;,&quot;pageBackgroundColor&quot;:&quot;#7748DD&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑12&quot;,&quot;status&quot;:0,&quot;titleColor&quot;:&quot;#ffffff&quot;,&quot;linkUrl&quot;:&quot;www.baidu.com&quot;,&quot;focusSize&quot;:&quot;1125*1125&quot;},&quot;polymerizationModuleInputVOList&quot;:[{&quot;contentType&quot;:1,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1000780007967966734&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1011457990196809371&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1016283312562192463&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;1020393716259048617&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;接口商品&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:1,&quot;contentModel&quot;:2},{&quot;contentType&quot;:2,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1002851736276584810&quot;,&quot;moduleContentSubId&quot;:&quot;7077738512846045297&quot;,&quot;contentImgId&quot;:&quot;671324996187013221&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口店铺&quot;},{&quot;contentId&quot;:&quot;1017939322665651874&quot;,&quot;moduleContentSubId&quot;:&quot;3416675659329390735&quot;,&quot;contentImgId&quot;:&quot;660934185126413958&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;},{&quot;contentId&quot;:&quot;1038372624342205947&quot;,&quot;moduleContentSubId&quot;:&quot;3881743475363170516&quot;,&quot;contentImgId&quot;:&quot;4238303920000224587&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;接口测试&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:&quot;4&quot;},{&quot;contentType&quot;:3,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1517122834954604476&quot;,&quot;moduleContentSubId&quot;:&quot;1960620678829133332&quot;},{&quot;contentId&quot;:&quot;3977073287509066083&quot;,&quot;moduleContentSubId&quot;:null},{&quot;contentId&quot;:&quot;2511853416736378124&quot;,&quot;moduleContentSubId&quot;:null}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;优惠券&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:4,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;7955042921509768191&quot;,&quot;moduleContentSubId&quot;:&quot;7792318835455836766&quot;,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1},{&quot;contentId&quot;:&quot;7702519956873756950&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;商品分类&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:5,&quot;moduleContentVOS&quot;:[{&quot;contentId&quot;:&quot;1241622038430238419&quot;,&quot;moduleContentSubId&quot;:&quot;8078350801478371476&quot;,&quot;contentImgId&quot;:&quot;1351088301763217005&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1351606338227031445&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;5689002560406439097&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1421605942922724535&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;4253436015359050919&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;},{&quot;contentId&quot;:&quot;1428145617093214928&quot;,&quot;moduleContentSubId&quot;:null,&quot;contentImgId&quot;:&quot;1281674784426642282&quot;,&quot;contentViewStyle&quot;:1,&quot;contentViewName&quot;:&quot;商品分类&quot;}],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;店铺模块&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0},{&quot;contentType&quot;:6,&quot;moduleContentVOS&quot;:[],&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;,&quot;polymerizationModuleSubId&quot;:null,&quot;tileName&quot;:&quot;超链接&quot;,&quot;titleImgId&quot;:&quot;&quot;,&quot;titleStyle&quot;:1,&quot;titleViewStatus&quot;:1,&quot;openBuyCar&quot;:0,&quot;contentModel&quot;:0,&quot;linkAddress&quot;:&quot;https://test.91hiwork.com/admin//index#/8271543244568284721/397642614108012650&quot;,&quot;linkImgSize&quot;:&quot;375*150&quot;,&quot;linkImgId&quot;:&quot;7987692425349317333&quot;}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/addPolymerizationModule</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">店铺---一行四个</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-设置活动聚合页-获取本地token" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/polymerization/cdnauth/getUploadToken</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1526938156">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:null</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-编辑活动聚合页" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/getAdminTreeNode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-编辑活动聚合页-提交活动聚合页内容" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;polymerizationCompanySubBOList&quot;:[&quot;269931278217394676660591&quot;,&quot;269931278217394676645018&quot;,&quot;269931278217394676660652&quot;,&quot;269931278217394676654858&quot;,&quot;269931278217394676625529&quot;,&quot;269931278217394676616904&quot;,&quot;269931278217394676699115&quot;,&quot;269931278217394676633090&quot;,&quot;269931278217394676698029&quot;,&quot;269931278217394676629196&quot;,&quot;269931278217394676671748&quot;,&quot;269931278217394676666787&quot;,&quot;269931278217394676646563&quot;,&quot;269931278217394676653826&quot;,&quot;269931278217394676649568&quot;,&quot;269931278217394676627505&quot;,&quot;269931278217394676647946&quot;,&quot;269931278217394676618653&quot;,&quot;269931278217394676699310&quot;,&quot;269931278217394676667685&quot;,&quot;269931278217394676633449&quot;,&quot;269931278217394676604467&quot;,&quot;269931278217394676625953&quot;,&quot;269931278217394676686015&quot;,&quot;269931278217394676689870&quot;,&quot;269931278217394676615351&quot;,&quot;269931278217394676613769&quot;,&quot;269931278217394676650324&quot;,&quot;269931278217394676674815&quot;,&quot;269931278217394676659903&quot;,&quot;269931278217394676690413&quot;,&quot;269931278217394676692407&quot;,&quot;269931278217394676666332&quot;,&quot;269931278217394676666639&quot;,&quot;269931278217394676631073&quot;,&quot;269931278217394676648016&quot;,&quot;269931278217394676664298&quot;,&quot;269931278217394676617822&quot;,&quot;269931278217394676665406&quot;,&quot;269931278217394676639121&quot;,&quot;269931278217394676618461&quot;,&quot;269931278217394676651335&quot;,&quot;269931278217394676679076&quot;,&quot;269931278217394676629219&quot;,&quot;269931278217394676625406&quot;,&quot;269931278217394676669719&quot;,&quot;269931278217394676643821&quot;,&quot;269931278217394676608838&quot;,&quot;269931278217394676673781&quot;,&quot;269931278217394676680310&quot;,&quot;269931278217394676621884&quot;,&quot;269931278217394676635905&quot;,&quot;269931278217394676674594&quot;,&quot;269931278217394676689939&quot;,&quot;269931278217394676681943&quot;,&quot;269931278217394676696249&quot;,&quot;269931278217394676678403&quot;,&quot;269931278217394676610289&quot;,&quot;269931278217394676603959&quot;,&quot;269931278217394676668750&quot;,&quot;269931278217394676662057&quot;,&quot;269931278217394676631558&quot;,&quot;269931278217394676608255&quot;,&quot;269931278217394676647001&quot;,&quot;269931278217394676654426&quot;,&quot;269931278217394676651433&quot;,&quot;269931278217394676676270&quot;,&quot;269931278217394676601778&quot;,&quot;269931278217394676608625&quot;,&quot;269931278217394676634547&quot;,&quot;269931278217394676664494&quot;,&quot;269931278217394676612695&quot;,&quot;269931278217394676620844&quot;,&quot;269931278217394676622182&quot;,&quot;269931278217394676634608&quot;,&quot;269931278217394676641997&quot;,&quot;269931278217394676644157&quot;,&quot;269931278217394676643763&quot;,&quot;269931278217394676617753&quot;,&quot;269931278217394676656273&quot;,&quot;269931278217394676670372&quot;,&quot;269931278217394676628541&quot;,&quot;269931278217394676645235&quot;,&quot;269931278217394676653443&quot;,&quot;269931278217394676677333&quot;,&quot;269931278217394676609269&quot;,&quot;269931278217394676677613&quot;,&quot;269931278217394676653396&quot;,&quot;269931278217394676663299&quot;,&quot;269931278217394676677090&quot;,&quot;269931278217394676654033&quot;,&quot;269931278217394676615626&quot;,&quot;269931278217394676635814&quot;,&quot;269931278217394676693164&quot;,&quot;269931278217394676670204&quot;,&quot;269931278217394676693252&quot;,&quot;269931278217394676674752&quot;,&quot;269931278217394676660889&quot;,&quot;269931278217394676659484&quot;,&quot;269931278217394676625725&quot;,&quot;269931278217394676613437&quot;,&quot;269931278217394676649344&quot;,&quot;269931278217394676627046&quot;,&quot;269931278217394676611745&quot;,&quot;269931278217394676691704&quot;,&quot;269931278217394676631341&quot;,&quot;269931278217394676606100&quot;,&quot;269931278217394676626545&quot;,&quot;269931278217394676660513&quot;,&quot;269931278217394676641667&quot;,&quot;269931278217394676602641&quot;,&quot;269931278217394676675571&quot;,&quot;269931278217394676690305&quot;,&quot;269931278217394676694351&quot;,&quot;269931278217394676680857&quot;,&quot;269931278217394676625412&quot;,&quot;269931278217394676668103&quot;,&quot;269931278217394676693154&quot;,&quot;269931278217394676634171&quot;,&quot;269931278217394676635625&quot;],&quot;polymerizationName&quot;:&quot;接口测试-创建活动聚合页-编辑${__Random(101,1000)}&quot;,&quot;description&quot;:&quot;接口测试-创建活动聚合页-编辑1&quot;,&quot;polymerizationId&quot;:&quot;${polymerizationId}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerization/insertPolymerization</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="后台管理-复制活动聚合页链接" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-复制 活动聚合页链接" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/carItemCount</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="后台管理-查询聚合页详情信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="polymerizationId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${polymerizationId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">polymerizationId</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/polymerization/polymerizationModule/getPolymerizationById?polymerizationId=1020892738500053492&amp;type=1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2127390830">&quot;result&quot;:&quot;success&quot;,&quot;code&quot;:&quot;1&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据驱动" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">0</stringProp>
          <stringProp name="TestPlan.comments">循环次数的用例数</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">./caseDate//${projectName}.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">CaseNo,ModuleName,ApiNanme,Domain,RequestType,Path,Param,Assertion</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="get请求" enabled="true">
            <stringProp name="IfController.condition">&quot;${RequestType}&quot;==&quot;get&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${CaseNo}_${ModuleName}_${ApiNanme}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${Path}?${Param}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1839609358">${Assertion}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="post请求" enabled="true">
            <stringProp name="IfController.condition">&quot;${RequestType}&quot;==&quot;post&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${CaseNo}_${ModuleName}_${ApiNanme}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${Param}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${Path}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1839609358">${Assertion}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="后端监听器-influxdb" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://${influxdbIP}:8086/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">${projectName}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value">${environment}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
